name: Application Tests

on:
  workflow_call:
    inputs:
      sonar-enabled:
        type: boolean
        required: false
        default: true
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  
  sonarqube:
    name: Scan SonarCloud
    runs-on: ubuntu-latest
    if: ${{ inputs.sonar-enabled == true }}
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build e Scan com SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./backend
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.login=${{ env.SONAR_TOKEN }}

      - name: Verificar Quality Gate do SonarCloud
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: ./backend/target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: 'https://sonarcloud.io'
